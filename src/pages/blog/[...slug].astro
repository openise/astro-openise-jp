---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import About from "@components/About.astro";
import TableOfContents from "@components/TableOfContents.astro";
import Tags from "@components/Tags.astro";
import { Icon } from 'astro-icon/components';

export async function getStaticPaths() {
  const posts = (await getCollection("blog"))
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content, headings } = await post.render();
---

<Layout title={post.data.title} description={post.data.description}>
  <Container>
    <div class="lg:grid lg:grid-cols-10 lg:gap-8 lg:items-start">
      <div class="lg:col-span-7">
        <div class="my-1 space-y-1">
          <div class="animate flex items-center gap-1.5">
            <div class="font-base text-sm">
              <FormattedDate date={post.data.date} />
            </div>
          </div>
          <h1 class="animate text-3xl font-semibold text-black dark:text-white">
            {post.data.title}
          </h1>
          <div class="flex fex-wrap items-center">
            <Icon class="h-5 w-5" name="mdi:tag" aria-hidden="true" focusable="false" />
            <Tags post={post}/>
          </div> 
        </div>
        <article>
          <Content />
        </article>
      </div>
      <aside class="hidden lg:col-span-3 lg:flex lg:flex-col lg:sticky lg:top-10 gap-y-6">
        <About />
        <TableOfContents headings={headings} />
      </aside>
    </div>
  </Container>
</Layout>
